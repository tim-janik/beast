<?xml version="1.0" encoding="UTF-8"?>		<!--*-mode: xml;-*-->
<gxk-radget-definitions
  xmlns:xdef="http://beast.testbit.eu/xmlns:xdef"
  xmlns:prop="http://beast.testbit.eu/xmlns:prop"
  xmlns:pack="http://beast.testbit.eu/xmlns:pack"
  xmlns:hook="http://beast.testbit.eu/xmlns:hook"
  xmlns:size="http://beast.testbit.eu/xmlns:size"
  xmlns:default-pack="http://beast.testbit.eu/xmlns:default-pack" >
  
  <!-- widget-patcher -->
  <xdef:tooltip inherit="GxkWidgetPatcher"
    prop:tooltip="$(null-collapse,$text)"
    prop:tooltip-visible="$(ifdef,tooltip-only-latent,$(not,$tooltip-only-latent),1)" />
  <xdef:hidden-when-insensitive inherit="GxkWidgetPatcher"
    prop:hide-insensitive="$(ifdef,hidden-when-insensitive,$hidden-when-insensitive,1)" />
  <xdef:widget-patcher inherit="GxkWidgetPatcher"
    prop:mute-events="$(ifdef,mute-events,$mute-events,0)"
    prop:lower-windows="$(ifdef,lower-windows,$lower-windows,0)"
    prop:width-from-height="$(ifdef,width-from-height,$width-from-height,0)"
    prop:height-from-width="$(ifdef,height-from-width,$height-from-width,0)"
    prop:force-resize-hsteps="$(ifdef,force-resize-hsteps,$force-resize-hsteps,0)"
    prop:force-resize-vsteps="$(ifdef,force-resize-vsteps,$force-resize-vsteps,0)"
    prop:min-resize-hunits="$(ifdef,min-resize-hunits,$min-resize-hunits,0)"
    prop:min-resize-vunits="$(ifdef,min-resize-vunits,$min-resize-vunits,0)"
    prop:normal-bg-as-base="$(ifdef,normal-bg-as-base,$normal-bg-as-base,0)"
    prop:bg-as-base="$(ifdef,bg-as-base,$bg-as-base,0)"
    prop:bg-as-active="$(ifdef,bg-as-active,$bg-as-active,0)"
    prop:base-as-bg="$(ifdef,base-as-bg,$base-as-bg,0)"
    />

  <!-- Primitive Gtk+ widget type wrappers -->
  
  <xdef:entry                 inherit="GtkEntry"
    prop:activates-default="$(ifdef,activates-default,$activates-default,1)"
    prop:text="$(ifdef,text,$text,)"
    />
  <!-- alignment -->
  <xdef:alignment             inherit="GtkAlignment"
    prop:xalign="$(first-occupied,$xalign,0.5)"
    prop:yalign="$(first-occupied,$yalign,0.5)"
    prop:xscale="$(first-occupied,$xscale,1)"
    prop:yscale="$(first-occupied,$yscale,1)"
    />
  <xdef:event-box             inherit="GtkEventBox"         />
  <xdef:arrow                 inherit="GtkArrow"
    prop:shadow-type="$(ifdef,shadow-type,$shadow-type,shadow-etched-in)"
    prop:arrow-type="$(ifdef,arrow-type,$arrow-type,arrow-right)"
    />
  <!-- frame -->
  <xdef:frame                 inherit="GtkFrame"
    prop:shadow-type="$(ifdef,shadow-type,$shadow-type,shadow-etched-in)"
    prop:label-xalign="$(first-occupied,$label-xalign,0)"
    prop:label-yalign="$(first-occupied,$label-yalign,0.5)"
    >
    <!-- frames may contain child widgets with gxk-adopt-prop="label-widget" -->
  </xdef:frame>
  <xdef:frame-shadow-in       inherit="frame"               prop:shadow-type="shadow-in" />
  <xdef:frame-shadow-out      inherit="frame"               prop:shadow-type="shadow-out" />
  <xdef:frame-etched-in       inherit="frame"               prop:shadow-type="etched-in" />
  <xdef:frame-etched-out      inherit="frame"               prop:shadow-type="etched-out" />
  <xdef:hseparator            inherit="GtkHSeparator"       />
  <xdef:vseparator            inherit="GtkVSeparator"       />
  <!-- boxes: expand= fill= spacing= -->
  <xdef:hbox                  inherit="GtkHBox"
    prop:homogeneous="$(ifdef,homogeneous,$homogeneous,0)"
    prop:spacing="$(ifdef,spacing,$spacing,0)"
    default-pack:expand="$(ifdef,expand,$expand,0)"
    default-pack:fill="$(ifdef,fill,$fill,1)"
    default-pack:pack-type="$(ifdef,pack-type,$pack-type,start)"
    default-pack:padding="$(ifdef,padding,$padding,0)"
    />
  <xdef:vbox                  inherit="GtkVBox"
    prop:homogeneous="$(ifdef,homogeneous,$homogeneous,0)"
    prop:spacing="$(ifdef,spacing,$spacing,0)"
    default-pack:expand="$(ifdef,expand,$expand,0)"
    default-pack:fill="$(ifdef,fill,$fill,1)"
    default-pack:pack-type="$(ifdef,pack-type,$pack-type,start)"
    default-pack:padding="$(ifdef,padding,$padding,0)"
    />
  <xdef:hbox-flipped          inherit="hbox"
    default-pack:pack-type="$(ifdef,pack-type,$pack-type,end)"
    />
  <!-- wrap boxes -->
  <xdef:hwrap                 inherit="GtkHWrapBox"
    prop:aspect-ratio="$(first-occupied,$aspect-ratio,1)"
    default-pack:hexpand="$(first-occupied,$hexpand,$expand,0)"
    default-pack:vexpand="$(first-occupied,$vexpand,$expand,0)"
    default-pack:hfill="$(first-occupied,$hfill,$fill,1)"
    default-pack:vfill="$(first-occupied,$vfill,$fill,1)"
    default-pack:wrapped="$(first-occupied,$wrapped,0)"
    />
  <xdef:vwrap                 inherit="GtkVWrapBox"
    prop:aspect-ratio="$(first-occupied,$aspect-ratio,1)"
    default-pack:hexpand="$(first-occupied,$hexpand,$expand,0)"
    default-pack:vexpand="$(first-occupied,$vexpand,$expand,0)"
    default-pack:hfill="$(first-occupied,$hfill,$fill,1)"
    default-pack:vfill="$(first-occupied,$vfill,$fill,1)"
    default-pack:wrapped="$(first-occupied,$wrapped,0)"
    />
  <!-- menubar -->
  <xdef:menubar               inherit="GtkMenuBar" />
  <xdef:popup-menu            inherit="GtkMenu" />
  <!-- menu-tearoff: actions= -->
  <xdef:menu-tearoff inherit="GtkTearoffMenuItem" />
  <!-- menu-item: label= accel-path= accel= stock-image= -->
  <xdef:menu-item             inherit="GxkMenuItem"
    prop:uline-label="$label"
    prop:accel-path="$(null-collapse,$accel-path)"
    prop:accel="$accel"
    prop:stock-image="$(first-occupied,$stock-image,$stock)" />
  <!-- menu-title: label= stock-image= -->
  <xdef:menu-title            inherit="GxkMenuItem"
    prop:uline-label="$label"
    prop:title-style="1"
    prop:stock-image="$(first-occupied,$stock-image,$stock)" />
  <!-- menu-separator: actions= -->
  <xdef:menu-separator inherit="GxkMenuItem" prop:sensitive="0" />
  <!-- submenu: label= stock-image= -->
  <xdef:submenu               inherit="GxkMenuItem"
    default-area="menu"
    prop:uline-label="$label"
    prop:stock-image="$(first-occupied,$stock-image,$stock,BST_STOCK_FOLDER)"
    prop:right-justify="$(ifdef,last,$last,0)" >
    <hidden-when-insensitive hidden-when-insensitive="$hidden-when-insensitive" />
    <GtkMenu id="menu" tearoff-title="$label" />
  </xdef:submenu>
  <xdef:submenu-last          inherit="submenu" last="1" />
  <!-- option-menu -->
  <xdef:option-menu           inherit="GtkOptionMenu" />
  <!-- menu-button arrow= relief= stock-size= -->
  <xdef:menu-button           inherit="GxkMenuButton"
    prop:relief="$(ifdef,relief,$relief,normal)"
    prop:stock-size="$(null-collapse,$stock-size)"
    prop:mode="$(first-occupied,$mode,tool-mode)"
    prop:assortment="$(null-collapse,$assortment)"
    />
  <!-- buttons: stock-label= label= relief= -->
  <xdef:button                inherit="GtkButton"
    prop:use-stock="$(if,$(first-occupied,$stock-label,$stock))"
    prop:label="$(null-collapse,$(first-occupied,$label,$text,$stock-label,$stock))"
    prop:use-underline="$(ifdef,use-underline,$use-underline,1)"
    prop:relief="$(ifdef,relief,$relief,normal)" />
  <xdef:check-button          inherit="GtkCheckButton"
    prop:use-stock="$(if,$(first-occupied,$stock-label,$stock))"
    prop:label="$(null-collapse,$(first-occupied,$label,$text,$stock-label,$stock))"
    prop:use-underline="$(ifdef,use-underline,$use-underline,1)"
    prop:relief="$(ifdef,relief,$relief,normal)" />
  <xdef:toggle-button         inherit="check-button"
    prop:draw-indicator="0" />
  <!-- label: label= -->
  <xdef:label                 inherit="GxkSimpleLabel"
    prop:label="$label" prop:use-underline="0"
    prop:auto-cut="$(first-occupied,$auto-cut,1)"
    prop:xpad="$(first-occupied,$xpad,0)"
    prop:ypad="$(first-occupied,$ypad,0)"
    prop:xalign="$(first-occupied,$xalign,0.5)"
    prop:yalign="$(first-occupied,$yalign,0.5)"
    />
  <xdef:ulabel                inherit="label"
    prop:justify="$(first-occupied,$justify,justify-left)"
    prop:use-underline="$(first-occupied,$use-underline,1)" />
  <!-- decks (notebook) -->
  <xdef:notebook              inherit="GxkNotebook"
    prop:scrollable="1"
    prop:show-tabs="$(first-occupied,$show-tabs,1)"
    prop:homogeneous="$(first-occupied,$homogeneous,0)"
    prop:assortment="$(null-collapse,$assortment)"
    />
  <xdef:deck                  inherit="notebook"
    prop:show-tabs="0"
    prop:show-border="0"
    prop:scrollable="1"
    prop:enable-popup="0" />
  <xdef:left-deck             inherit="deck"
    prop:show-tabs="1" prop:tab-pos="left" />
  <xdef:right-deck            inherit="deck"
    prop:show-tabs="1" prop:tab-pos="right" />
  <xdef:top-deck              inherit="deck"
    prop:show-tabs="1" prop:tab-pos="top" />
  <xdef:bottom-deck           inherit="deck"
    prop:show-tabs="1" prop:tab-pos="bottom" />
  <!-- image: stock-image= stock-size= -->
  <xdef:image                 inherit="GxkImage"
    prop:stock-size="$(null-collapse,$stock-size)"
    prop:stock="$(first-occupied,$stock-image,$stock)" />
  <!-- backshade -->
  <xdef:back-shade            inherit="GxkBackShade"
    />
  <!-- scrollbars/scales -->
  <xdef:hscale                inherit="GtkHScale" prop:draw_value="$(first-occupied,$draw-value,0)" focus="0" />
  <xdef:vscale                inherit="GtkVScale" prop:draw_value="$(first-occupied,$draw-value,0)" focus="0" />
  <xdef:hscrollbar            inherit="GtkHScrollbar" focus="0" />
  <xdef:vscrollbar            inherit="GtkVScrollbar" focus="0" />
  <xdef:hruler                inherit="GtkHRuler"
    prop:lower="$(first-occupied,$lower,1.0)"
    prop:upper="$(first-occupied,$upper,1.0)"
    prop:position="$(first-occupied,$position,0.5)"
    prop:max-size="$(first-occupied,$max-size,10.0)" />
  <xdef:vruler                inherit="GtkVRuler"
    prop:lower="$(first-occupied,$lower,1.0)"
    prop:upper="$(first-occupied,$upper,1.0)"
    prop:position="$(first-occupied,$position,0.5)"
    prop:max-size="$(first-occupied,$max-size,10.0)" />
  <!-- misc containers -->
  <xdef:viewport              inherit="GtkViewport"
    prop:shadow-type="$(first-occupied,$shadow-type,shadow-none)"
    />
  <xdef:scrolled-window       inherit="GxkScrolledWindow"
    prop:shadow-type="$(first-occupied,$shadow-type,shadow-in)"
    prop:hscrollbar-policy="$(first-occupied,$hscrollbar-policy,policy-always)"
    prop:vscrollbar-policy="$(first-occupied,$vscrollbar-policy,policy-always)"
    prop:window-placement="$(first-occupied,$window-placement,top-left)"
    prop:spare-space="$(first-occupied,$spare-space,0)"
    />
  <xdef:handle-box            inherit="GtkHandleBox"
    prop:shadow-type="$(ifdef,shadow-type,$shadow-type,shadow-etched-in)"
    prop:handle-position="$(ifdef,handle-position,$handle-position,left)"
    prop:snap-edge="$(ifdef,snap-edge,$snap-edge,left)"
    prop:snap-edge-set="$(ifdef,snap-edge,1,0)"
    />
  <xdef:tree-view             inherit="GtkTreeView"
    prop:rules-hint="$(ifdef,rules-hint,$rules-hint,1)"
    />
  <xdef:window                inherit="GtkWindow"         />
  <xdef:table                 inherit="GtkTable"
    default-pack:left-attach="$(first-occupied,$left-attach,0)"
    default-pack:right-attach="$(first-occupied,$right-attach,1)"
    default-pack:top-attach="$(first-occupied,$top-attach,0)"
    default-pack:bottom-attach="$(first-occupied,$bottom-attach,1)"
    default-pack:x-options="$(first-occupied,$x-options,fill)"
    default-pack:y-options="$(first-occupied,$y-options,fill)"
    default-pack:x-padding="$(first-occupied,$x-padding,0)"
    default-pack:y-padding="$(first-occupied,$y-padding,0)" />
  <!-- paned containers -->
  <xdef:hpaned                inherit="GtkHPaned"
    prop:position="$(max,$position,0)"
    prop:position-set="$(if,$(le,$position,0),0,1)"
    default-pack:resize="$(ifdef,resize,$resize,1)"
    default-pack:shrink="$(ifdef,shrink,$shrink,1)"
    />
  <xdef:vpaned                inherit="GtkVPaned"
    prop:position="$(max,$position,0)"
    prop:position-set="$(if,$(le,$position,0),0,1)"
    default-pack:resize="$(ifdef,resize,$resize,1)"
    default-pack:shrink="$(ifdef,shrink,$shrink,1)"
    />
  <!-- rack table & items -->
  <xdef:rack-table            inherit="GxkRackTable" />
  <xdef:rack-item             inherit="GxkRackItem" />
  

  <!-- Construction of composite containers -->

  <!-- border-layout -->
  <xdef:border-layout inherit="vbox" default-area="center" >
    <vbox id="north" />
    <hbox expand="1" >
      <hbox id="east" />
      <vbox id="center" expand="1" />
      <hbox id="west" />
    </hbox>
    <vbox id="south" />
  </xdef:border-layout>

  <!-- Gxk builtin types -->

  <!-- radget-factory: actions= action-root= per-list= per-action= -->
  <xdef:radget-factory        inherit="GxkRadgetFactory"
    prop:action-root="$(ifdef,action-root,$action-root,:xdef)"
    prop:action-list="$actions"
    prop:per-branch="$(null-collapse,$per-branch)"
    prop:per-list="$(null-collapse,$per-list)"
    prop:per-action="$(null-collapse,$per-action)"
    prop:activatable="$(null-collapse,$per-action)" prop:regulate="$(null-collapse,$per-action)" />
  <xdef:factory-branch        inherit="GxkFactoryBranch"
    prop:uline-label="$label"
    prop:key-label="$(null-collapse,$(ifdef,_label,$_label,$label))"
    />
  <!-- menu-factory: actions= separator= -->
  <xdef:menu-factory inherit="radget-factory"
    per-branch="menu-factory-branch"
    per-list="$(ifdef,per-list,$per-list,$(if,$separator,menu-factory-per-list,))"
    per-action="$(ifdef,per-action,$per-action,menu-factory-per-action)" />
  <xdef:menu-factory-branch inherit="submenu" label="$action-name" hidden-when-insensitive="$hidden" />
  <xdef:menu-factory-per-list inherit="menu-separator" />
  <xdef:menu-factory-per-action inherit="menu-item"
    label="$action-name"
    accel="$action-accel"
    accel-path="$action-path"
    stock-image="$action-stock" >
    <tooltip text="$action-tooltip" tooltip-only-latent="0" />
  </xdef:menu-factory-per-action>
  <!-- menu-action-separator: produce a menu separator if actions are present: action-root= actions=  -->
  <xdef:menu-action-separator inherit="radget-factory"
    per-branch=""
    per-list="menu-factory-per-list"
    per-action="" />
  
  <!-- separator: hseparator= vseparator= -->
  <xdef:separator inherit="alignment" yscale="0.4" xscale="0.4"  >
    <hbox>
      <vseparator
	visible="$vseparator"
	size:hgroup="gxk-toolbar-space" />
      <hseparator
	visible="$hseparator"
	size:vgroup="gxk-toolbar-space" />
      <alignment
	visible="$(nor,$hseparator,$vseparator)"
	size:hgroup="gxk-toolbar-space"
	size:vgroup="gxk-toolbar-space" />
    </hbox>
  </xdef:separator>
  <!-- button factories: button-args, radget-factory-args -->
  <xdef:button-factory  inherit="radget-factory" per-action="action-button" width-from-height="1.25" />
  <xdef:toggle-factory  inherit="radget-factory" per-action="action-toggle" width-from-height="1.25" />
  <!-- action buttons: button, widget-patcher, image-size= action-*= -->
  <xdef:action-image-button inherit="button" focus="0" default-area="vbox" >
    <tooltip text="$action-tooltip" />
    <widget-patcher
      width-from-height="$width-from-height"
      height-from-width="$height-from-width"
      force-resize-hsteps="$force-resize-hsteps"
      force-resize-vsteps="$force-resize-vsteps"
      min-resize-hunits="$min-resize-hunits"
      min-resize-vunits="$min-resize-vunits" />
    <vbox>
      <image
	expand="1"
	stock-image="$action-stock"
	visible="$(ifdef,action-stock,1,0)"
	stock-size="$image-size" />
    </vbox>
  </xdef:action-image-button>
  <xdef:action-button inherit="action-image-button" >
    <ulabel label="$action-name" />
  </xdef:action-button>
  <xdef:action-image-toggle inherit="toggle-button" focus="0" default-area="vbox" >
    <tooltip text="$action-tooltip" />
    <widget-patcher
      width-from-height="$width-from-height"
      height-from-width="$height-from-width"
      force-resize-hsteps="$force-resize-hsteps"
      force-resize-vsteps="$force-resize-vsteps"
      min-resize-hunits="$min-resize-hunits"
      min-resize-vunits="$min-resize-vunits" />
    <vbox>
      <image
	expand="1"
	stock-image="$action-stock"
	visible="$(ifdef,action-stock,1,0)"
	stock-size="$image-size" />
    </vbox>
  </xdef:action-image-toggle>
  <xdef:action-toggle inherit="action-image-toggle">
    <ulabel label="$action-name" />
  </xdef:action-toggle>
  <!-- muted-button: button-args -->
  <xdef:muted-button inherit="button" focus="0" >
    <widget-patcher mute-events="1" lower-windows="1" />
  </xdef:muted-button>
  
  <xdef:big-button-factory  inherit="button-factory" image-size="big-button" />
  <!-- toolbar -->
  <xdef:toolbar             inherit="scrolled-window"
    default-area="toolbar-hbox"
    hscrollbar-policy="automatic"
    vscrollbar-policy="never"
    spare-space="1"
    shadow-type="shadow-out"
    window-placement="bottom-right" >
    <viewport>
      <hbox id="toolbar-hbox" />
    </viewport>
  </xdef:toolbar>
  <!-- toolbar factories -->
  <xdef:tool-button-factory inherit="button-factory" image-size="big-button" relief="none" width-from-height="1.2" />
  <xdef:tool-toggle-factory inherit="toggle-factory" image-size="big-button" relief="none" width-from-height="1.2" />
  <!-- palette factories -->
  <xdef:palette-button-factory inherit="button-factory" per-action="action-image-button" image-size="big-button" />
  <xdef:palette-toggle-factory inherit="toggle-factory" per-action="action-image-toggle" image-size="big-button" />
  <!-- toolbar items -->
  <xdef:tool-separator      inherit="separator" hseparator="0" vseparator="1" />
  <xdef:tool-space          inherit="separator" hseparator="0" vseparator="0" />
  <!-- tool-area: ="label-area" tooltip= -->
  <xdef:tool-area           inherit="muted-button"
    hseparator="0" vseparator="0" relief="none" default-area="image-area" >
    <tooltip text="$(null-collapse,$tooltip)" />
    <vbox>
      <vbox id="image-area" expand="1" />
      <vbox id="label-area" pack:pack-type="end" />
    </vbox>
  </xdef:tool-area>
  <!-- labeled-tool-area: label= tooltip= -->
  <xdef:labeled-tool-area   inherit="muted-button" label=""
    hseparator="0" vseparator="0" relief="none" default-area="image-area" >
    <!--local relief="foo" label="" /-->
    <tooltip text="$(null-collapse,$tooltip)" />
    <vbox>
      <vbox id="image-area" expand="1" />
      <vbox id="label-area" pack:pack-type="end" >
	<ulabel area="label-area" label="$label" />
      </vbox>
    </vbox>
  </xdef:labeled-tool-area>
  
  <xdef:text-toggle-factory inherit="radget-factory"
    per-action="action-text-toggle" />
  <xdef:action-text-toggle inherit="toggle-button" focus="0" >
    <tooltip text="$action-tooltip" />
    <alignment yalign="$(first-occupied,$yalign,0.5)" yscale="0" >
      <ulabel label="$action-name" justify="center" />
    </alignment>
  </xdef:action-text-toggle>
  <xdef:tool-text-toggle-factory   inherit="text-toggle-factory" image-size="big-button" relief="none" />

  <!-- image-button: button, tooltip= stock-image= image-size= -->
  <xdef:image-button inherit="button" default-area="vbox" >
    <tooltip text="$tooltip" />
    <vbox>
      <image expand="1"
	stock-image="$(first-occupied,$stock-image,$stock)"
	visible="$(if,$(first-occupied,$stock-image,$stock))"
	stock-size="$image-size" />
    </vbox>
  </xdef:image-button>
  <!-- label-image-button: image-button, label= -->
  <xdef:label-image-button inherit="image-button" label="" >
    <ulabel label="$label" />
  </xdef:label-image-button>
  <!-- hstock-button: button, tooltip= stock-image= image-size= -->
  <xdef:hstock-button inherit="button" default-area="hbox" label="" focus="1" >
    <tooltip text="$tooltip" />
    <alignment xscale="0" xalign="0.5" >
      <hbox spacing="3" >
	<image
	  stock-image="$(first-occupied,$stock-image,$stock)"
	  visible="$(if,$(first-occupied,$stock-image,$stock))"
	  stock-size="$image-size" />
	<ulabel label="$label" visible="$(ifdef,label)" />
      </hbox>
    </alignment>
  </xdef:hstock-button>
  <!-- big-button: label-image-button -->
  <xdef:big-button inherit="label-image-button" image-size="big-button" />
  <!-- big-tool-button: big-button -->
  <xdef:big-tool-button inherit="big-button" relief="none" focus="0" image-size="big-button" />
  
  <!-- gxk-scroll-text-toolbar -->
  <xdef:gxk-scroll-text-toolbar inherit="frame-shadow-out" >
    <hbox >
      <big-tool-button id="back-button" size:hgroup="gxksttbtns"
	_label="_Back"
	_tooltip="Go back one page"
	stock-image="gtk-go-back" />
      <big-tool-button id="forward-button" size:hgroup="gxksttbtns"
	_label="_Forward"
	_tooltip="Go forward one page"
	stock-image="gtk-go-forward" />
      <big-tool-button id="reload-button" size:hgroup="gxksttbtns"
	_label="_Reload"
	_tooltip="Reload current page"
	stock-image="gtk-refresh" />
      <big-tool-button id="index-button" size:hgroup="gxksttbtns"
	_label="_Index"
	_tooltip="Go to browser index"
	stock-image="gtk-index" />
      <big-tool-button id="find-button" size:hgroup="gxksttbtns"
	_label="_Find"
	_tooltip="Find in current document"
	sensitive="0"
	stock-image="gtk-find" />
      <labeled-tool-area
	_label="Location"
	_tooltip="Enter document or file location"
	expand="1" >
	<entry id="location-entry" activates-default="0" />
      </labeled-tool-area>
    </hbox>
  </xdef:gxk-scroll-text-toolbar>

</gxk-radget-definitions>
